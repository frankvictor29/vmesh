#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'mesh'
require 'logger'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/mesh` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/mesh now"
  exit 64
end

include GLI::App

version Mesh::VERSION
Mesh.logger = Logger.new(STDOUT)
@logger = Mesh.logger


config_filename = '.mesh.rc'

if ARGV.any?
  host_alias = ARGV[0]
  if File.exist? File.join(File.expand_path(ENV['HOME']),".mesh.#{host_alias}.rc")
    config_filename = ".mesh.#{host_alias}.rc"
    Mesh.logger.info "Using host specific config file ~/.mesh.#{host_alias}.rc"
    ARGV.shift
  else
    Mesh.logger.info "No site specific config file found, using default ~/#{config_filename}."
  end
end

config_file config_filename

program_desc 'VMWare VSphere command suite interface'
program_long_desc 'A command suite to allow users to manage VMWare virtual machines remotely via the command line'

desc 'Ignore SSL Certificate errors in connection'
switch [:insecure]

desc 'VCenter username'
#default_value 'the default'
arg_name 'user'
flag [:u,:user]

desc 'VCenter password'
arg_name 'password'
flag [:p,:password]

desc 'VCenter host'
arg_name 'vcenter host'
flag [:h,:host]

desc 'Datacenter'
arg_name 'datacenter'
flag [:d,:datacenter]

desc 'VCenter Resource Pool'
arg_name 'vcenter resource pool'
flag [:r,:resource_pool]

commands_from 'mesh/commands'

desc 'TODO Describe list here'
arg_name 'TODO Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
    puts "list command ran"
    puts "recursive by default, list the folders, vms"
  end
end

desc 'TODO Describe destroy here'
arg_name 'Describe arguments to destroy here'
command :destroy do |c|
  c.action do |global_options,options,args|
    puts "destroy command ran"
  end
end

desc 'TODO Describe run here'
arg_name 'Describe arguments to run here'
command :run do |c|
  c.action do |global_options,options,args|
    puts "run command ran"
  end
end

desc 'TODO Describe info here'
arg_name 'Describe arguments to info here'
command :info do |c|
  c.action do |global_options,options,args|
    puts "info command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
